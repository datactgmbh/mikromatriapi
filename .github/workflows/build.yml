name: build

on:
  push:
    branches: [main, master]
    tags:
      - "v*"
  pull_request:

jobs:
  tests:
    uses: ./.github/workflows/ci-tests.yml

  build:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.4"
          tools: composer:v2
          extensions: intl, pdo_mysql, pdo_pgsql
          coverage: none

      - name: Validate composer.json
        run: composer validate --no-check-publish

      - name: Get composer cache directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies (no-dev)
        run: composer install --no-dev --prefer-dist --no-progress --no-interaction --optimize-autoloader


      - name: Prepare release directory
        run: |
          APP_NAME=mikromatriapi
          VERSION=${GITHUB_REF_NAME:-commit-${GITHUB_SHA::7}}
          ZIP_NAME=${APP_NAME}-${VERSION}
          echo "ZIP_NAME=${ZIP_NAME}" >> $GITHUB_ENV
          rm -rf .git .github tests phpstan.neon.dist phpunit.xml.dist composer.lock composer.json

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          name: ${{ env.ZIP_NAME }}
          path: .

      - name: Create ZIP for release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          zip -r "${{ env.ZIP_NAME }}.zip" . -x ".git/*" -x ".github/*" -x "tests/*" -x phpstan.neon.dist -x phpunit.xml.dist -x composer.lock -x composer.json

      - name: Create GitHub Release (tag only)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ZIP_NAME }}.zip
          token: ${{ secrets.RELEASE_TOKEN }}
